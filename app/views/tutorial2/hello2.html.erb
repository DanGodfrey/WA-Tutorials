<div id="hello">
    <h5>
        This is a nice start, but the message is a little to informal. Each user avatar already has a name in the environment so wouldn't it be nice to display their name instead of "world"? Lucky for us, when a JavaScript trigger in Web Alive is invoked it passes 8 parameters to the JavaScript function being called. Let's take a quick look at the first 3: 
    </h5>
    <ol>
        <li><strong>parameters</strong> - this parameter contains the string entered for the Parameters field of the JavaScript trigger. It can be used to send additional information to the function not covered by the other 7 parameters. The function must know how to interpret the string and extract individual parameters if multiple parameters are provided. Common use is to separate individual parameters with a comma.</li>
        <li><strong>pawnSessionId</strong> - contains the session id of the user</li>
        <li><strong>pawnName</strong> - contains the name of the user's avatar</li>
    </ol>
    <h5>
        By now you should have noticed that our initial helloWorld function did not take in any parameters. In JavaScript, if a function takes in X parameters and Y parameters are passed in such that Y > X only the first X parameters will be passed to the function. The opposite is also true, if Y parameters are passed such that Y < X only the first Y parameters will be passed and the remaining parameters will be undefined. Therefore, if we only want the 3rd parameter (pawnName) our function must take in at least 3 parameters and we can choose to ignore the first 2 if need be. For details on the remaining 5 parameters, see the official Web Alive <a href="http://wiki.avayalive.com/wiki/7/4_Triggers">documentation</a>. 
    </h5>
     <div class="btn info next" id="next">
          Next >>
     </div>
</div>
<script>
    $("#hello").css("margin-top",$(".tut-container").height()/2 - $("#hello").height()/2);
    $("#next").click(function(){
        $.get('/hello3', function(data) {
            $("#hello").fadeOut();  
            setTimeout(function(){$("#tut-container-content").html(data);},1000);
        });
    });
</script>
